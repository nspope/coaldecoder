// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>
#include "expm.h"

using namespace Rcpp;

// test_matrix_exponential_multiply
Rcpp::List test_matrix_exponential_multiply(arma::mat A, arma::mat B, double t, arma::mat g);
RcppExport SEXP _coaldecoder_test_matrix_exponential_multiply(SEXP ASEXP, SEXP BSEXP, SEXP tSEXP, SEXP gSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type g(gSEXP);
    rcpp_result_gen = Rcpp::wrap(test_matrix_exponential_multiply(A, B, t, g));
    return rcpp_result_gen;
END_RCPP
}
// test_coalescent_epoch
Rcpp::List test_coalescent_epoch(arma::mat states, arma::uvec n, arma::umat y, arma::uvec remap, arma::mat migr_mat, arma::mat gradient);
RcppExport SEXP _coaldecoder_test_coalescent_epoch(SEXP statesSEXP, SEXP nSEXP, SEXP ySEXP, SEXP remapSEXP, SEXP migr_matSEXP, SEXP gradientSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type states(statesSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type remap(remapSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type migr_mat(migr_matSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type gradient(gradientSEXP);
    rcpp_result_gen = Rcpp::wrap(test_coalescent_epoch(states, n, y, remap, migr_mat, gradient));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_particle();

static const R_CallMethodDef CallEntries[] = {
    {"_coaldecoder_test_matrix_exponential_multiply", (DL_FUNC) &_coaldecoder_test_matrix_exponential_multiply, 4},
    {"_coaldecoder_test_coalescent_epoch", (DL_FUNC) &_coaldecoder_test_coalescent_epoch, 6},
    {"_rcpp_module_boot_particle", (DL_FUNC) &_rcpp_module_boot_particle, 0},
    {NULL, NULL, 0}
};

//RcppExport void R_init_coaldecoder(DllInfo *dll) {
//    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
//    R_useDynamicSymbols(dll, FALSE);
//}

//manually copied, blarg
extern "C" void R_init_coaldecoder(DllInfo *dll) { 
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
    expmatrix = (void (*) (double*, int, double*, precond_type)) R_GetCCallable("expm", "expm"); 
} 
